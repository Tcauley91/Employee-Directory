{"ast":null,"code":"var _jsxFileName = \"/Users/tylercauley/Desktop/Homeworks/Employee-Directory/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport employees from \"./employees.json\";\nimport SortButton from \"./components/LastNameButton\";\n\nclass App extends Component {\n  // Setting this.state.employees to the employees json array\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        searchString: this.refs.search.value\n      });\n    };\n\n    this.sortByNameZA = e => {\n      let name = [...this.state.employees];\n      name.sort((a, b) => {\n        let aFirst = a.name.split(\" \");\n        let bFirst = b.name.split(\" \");\n        let aLast = aFirst[aFirst.length[1]];\n        let bLast = bFirst[bFirst.length[1]];\n        if (aLast < bLast) return 1;\n        if (aLast > bLast) return -1;\n        return 0;\n      });\n      this.setState({\n        employees: name\n      });\n    };\n\n    this.sortByNameAZ = e => {\n      let name = [...this.state.employees];\n      name.sort((a, b) => {\n        let aLast = a.name.split(\" \");\n        let bLast = b.name.split(\" \");\n        let aFirst = aLast[aLast.length[1]];\n        let bFirst = bLast[bLast.length[1]];\n        if (aFirst < bFirst) return 1;\n        if (aFirst > bFirst) return -1;\n        return 0;\n      });\n      this.setState({\n        employees: name\n      });\n    };\n\n    this.state = {\n      searchString: \"\",\n      employees: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      employees: employees\n    });\n    this.refs.search.focus();\n  } // Getting the value and name of the input which triggered the change\n\n\n  // Map over this.state.employees and render a EmployeeCard component for each employee object\n  render() {\n    let _employees = this.state.employees;\n    let search = this.state.searchString.trim().toLowerCase();\n\n    if (search.length > 0) {\n      _employees = _employees.filter(function (employee) {\n        return employee.name.toLowerCase().match(search);\n      });\n    }\n\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.searchString,\n      ref: \"search\",\n      onChange: this.handleInputChange,\n      placeholder: \"type name here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(SortButton, {\n      sortByNameAZ: this.sortByNameAZ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(SortButton, {\n      sortByNameZA: this.sortByNameZA,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Employee Directory\"), _employees.map(employee => React.createElement(FriendCard, {\n      id: employee.id,\n      key: employee.id,\n      name: employee.name,\n      image: employee.image,\n      occupation: employee.occupation,\n      Contact: employee.Contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tylercauley/Desktop/Homeworks/Employee-Directory/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","employees","SortButton","App","constructor","props","handleInputChange","event","console","log","target","value","setState","searchString","refs","search","sortByNameZA","e","name","state","sort","a","b","aFirst","split","bFirst","aLast","length","bLast","sortByNameAZ","bind","componentDidMount","focus","render","_employees","trim","toLowerCase","filter","employee","match","map","id","image","occupation","Contact"],"mappings":"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","sourcesContent":["import React, { Component} from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport employees from \"./employees.json\";\nimport SortButton from \"./components/LastNameButton\";\n\nclass App extends Component {\n  // Setting this.state.employees to the employees json array\n  constructor(props){\n  super(props);\n  this.state = {\n    searchString: \"\",\n    employees: []\n  };\n  this.handleInputChange = this.handleInputChange.bind(this);\n\n}\n\n  componentDidMount(){\n    this.setState({\n      employees: employees\n    });\n    this.refs.search.focus();\n  }\n    // Getting the value and name of the input which triggered the change\n\n  handleInputChange = event => {\n      console.log(event.target.value);\n     this.setState({\n       searchString: this.refs.search.value\n     });\n  };\n\n  // Sort names A-Z & Z-A\n  // sortByNameAZ = e => {\n  //   let name = [...this.state.employees];\n  //   name.sort((a,b)=>{\n  //     var nameA = a.name.toUpperCase(); \n  //     var nameB = b.name.toUpperCase(); \n  //     if (nameA < nameB) {\n  //       return -1;\n  //     }\n  //     if (nameA > nameB) {\n  //       return 1;\n  //     }\n\n  //     return 0;\n  //   })\n  //   this.setState({employees: name})\n  // }\n  sortByNameZA = e => {\n    let name = [...this.state.employees];\n\n    name.sort((a,b)=>{\n\n      let aFirst = a.name.split(\" \");\n      let bFirst = b.name.split(\" \");\n      let aLast = aFirst[aFirst.length [1]];\n      let bLast = bFirst[bFirst.length [1]];\n\n      if(aLast < bLast) return 1;\n      if(aLast > bLast) return -1;\n      return 0;\n    })\n    this.setState({employees: name})\n  }\n\n  sortByNameAZ = e => {\n    let name = [...this.state.employees];\n\n    name.sort((a,b)=>{\n\n      let aLast = a.name.split(\" \");\n      let bLast = b.name.split(\" \");\n      let aFirst = aLast[aLast.length [1]];\n      let bFirst = bLast[bLast.length [1]];\n\n      if(aFirst < bFirst) return 1;\n      if(aFirst > bFirst) return -1;\n      return 0;\n    })\n    this.setState({employees: name})\n  }\n\n\n  // Map over this.state.employees and render a EmployeeCard component for each employee object\n  render() {\n    let _employees = this.state.employees;\n    let search = this.state.searchString.trim().toLowerCase();\n      if(search.length >0){\n        _employees = _employees.filter(function(employee){\n          return employee.name.toLowerCase().match(search);\n        });\n      }\n    return (\n      <Wrapper>\n           <input\n                   type=\"text\"\n                   value={this.state.searchString}\n                   ref=\"search\"\n                   onChange={this.handleInputChange}\n                   placeholder=\"type name here\"\n                 />\n                 <SortButton\n                 sortByNameAZ={this.sortByNameAZ}\n                 >\n                 </SortButton>\n                 <SortButton \n                 sortByNameZA={this.sortByNameZA}\n                 ></SortButton>\n        <Title>Employee Directory</Title>\n        {_employees.map(employee => (\n          <FriendCard\n            id={employee.id}\n            key={employee.id}\n            name={employee.name}\n            image={employee.image}\n            occupation={employee.occupation}\n            Contact={employee.Contact}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}