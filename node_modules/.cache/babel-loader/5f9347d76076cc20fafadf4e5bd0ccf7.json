{"ast":null,"code":"var _jsxFileName = \"/Users/tylercauley/Desktop/Homeworks/Employee-Directory/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport employees from \"./employees.json\";\nimport SortButton from \"./components/Button\";\n\nclass App extends Component {\n  // Setting this.state.employees to the employees json array\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        searchString: this.refs.search.value\n      });\n    };\n\n    this.state = {\n      searchString: \"\",\n      employees: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.sortByNameAZ = this.sortByNameAZ.bind(this);\n    this.sortByNameZA = this.sortByNameZA.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      employees: employees\n    });\n    this.refs.search.focus();\n  } // Getting the value and name of the input which triggered the change\n\n\n  // Sort names A-Z & Z-A\n  sortByNameAZ() {\n    this.setState(prevState => {\n      this.state.employee.sort((a, b) => a.name < b.name);\n      return 1;\n    });\n  }\n\n  sortByNameZA() {\n    this.setState(prevState => {\n      this.state.employee.sort((a, b) => b.name > a.name);\n      return -1;\n    });\n  } // Map over this.state.employees and render a EmployeeCard component for each employee object\n\n\n  render() {\n    let _employees = this.state.employees;\n    let search = this.state.searchString.trim().toLowerCase();\n\n    if (search.length > 0) {\n      _employees = _employees.filter(function (employee) {\n        return employee.name.toLowerCase().match(search);\n      });\n    }\n\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.searchString,\n      ref: \"search\",\n      onChange: this.handleInputChange,\n      placeholder: \"type name here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(SortButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Employee Directory\"), _employees.map(employee => React.createElement(FriendCard, {\n      id: employee.id,\n      key: employee.id,\n      name: employee.name,\n      image: employee.image,\n      occupation: employee.occupation,\n      Contact: employee.Contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tylercauley/Desktop/Homeworks/Employee-Directory/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","employees","SortButton","App","constructor","props","handleInputChange","event","console","log","target","value","setState","searchString","refs","search","state","bind","sortByNameAZ","sortByNameZA","componentDidMount","focus","prevState","employee","sort","a","b","name","render","_employees","trim","toLowerCase","length","filter","match","map","id","image","occupation","Contact"],"mappings":"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","sourcesContent":["import React, { Component} from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport employees from \"./employees.json\";\nimport SortButton from \"./components/Button\";\n\nclass App extends Component {\n  // Setting this.state.employees to the employees json array\n  constructor(props){\n  super(props);\n  this.state = {\n    searchString: \"\",\n    employees: []\n  };\n  this.handleInputChange = this.handleInputChange.bind(this);\n  this.sortByNameAZ = this.sortByNameAZ.bind(this);\n    this.sortByNameZA = this.sortByNameZA.bind(this);\n}\n\n  componentDidMount(){\n    this.setState({\n      employees: employees\n    });\n    this.refs.search.focus();\n  }\n    // Getting the value and name of the input which triggered the change\n\n  handleInputChange = event => {\n      console.log(event.target.value);\n     this.setState({\n       searchString: this.refs.search.value\n     });\n  };\n\n  // Sort names A-Z & Z-A\n  \n  sortByNameAZ() {\n    this.setState(prevState => {\n      this.state.employee.sort((a, b) => (a.name < b.name))\n      return 1;\n  });\n  }\n\n  sortByNameZA() {\n    this.setState(prevState => {\n      this.state.employee.sort((a, b) => (b.name > a.name))\n      return -1;\n  });\n  }\n\n\n  // Map over this.state.employees and render a EmployeeCard component for each employee object\n  render() {\n    let _employees = this.state.employees;\n    let search = this.state.searchString.trim().toLowerCase();\n      if(search.length >0){\n        _employees = _employees.filter(function(employee){\n          return employee.name.toLowerCase().match(search);\n        });\n      }\n    return (\n      <Wrapper>\n           <input\n                   type=\"text\"\n                   value={this.state.searchString}\n                   ref=\"search\"\n                   onChange={this.handleInputChange}\n                   placeholder=\"type name here\"\n                 />\n                 <SortButton></SortButton>\n        <Title>Employee Directory</Title>\n        {_employees.map(employee => (\n          <FriendCard\n            id={employee.id}\n            key={employee.id}\n            name={employee.name}\n            image={employee.image}\n            occupation={employee.occupation}\n            Contact={employee.Contact}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}